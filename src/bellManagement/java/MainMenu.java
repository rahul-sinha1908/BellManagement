/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainMenu.java
 *
 * Created on Jan 4, 2012, 5:23:47 PM
 */
package bellManagement.java;

import java.awt.*;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.awt.event.*;
import java.util.Calendar;
import java.util.GregorianCalendar;

/**
 *
 * @author BMS
 */
public class MainMenu extends javax.swing.JFrame {

    static JButton jLbl[];
    static String time[];
    static int tTime[][];
    static String ofc[];
    static int nTime=0;
    DataInputStream file;
    static int cTime=100;
    Thread thrd;
    Calendar cln;
    int hh=0,mm=0,ss=0;
    String curTime="";
    static int delay=0;
    static String txtfile="time1.txt";

    
    /** Creates new form MainMenu */
    public MainMenu() {
        cln=Calendar.getInstance();
        if(cln.get(Calendar.DAY_OF_WEEK)==2 || cln.get(Calendar.DAY_OF_WEEK)==7)
            txtfile="time2.txt";
        
        initComponents();
        display.setLayout(new FlowLayout());
        display.add(new dispPanel());
        switchOff();
    }
    Process pro;
    public void switchOn() {
        try{
            pro=Runtime.getRuntime().exec("RingMyBell.exe");
        }catch(Exception ex){JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    public void switchOff(){
        try{
            pro=Runtime.getRuntime().exec("RingMyBellClose.exe");
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        heading1 = new javax.swing.JLabel();
        heading2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        MclockPanel = new javax.swing.JPanel();
        masterClock = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        saveSettings = new javax.swing.JButton();
        display = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bell Management");

        heading1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        heading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading1.setText("De Nobili School, CMRI");

        heading2.setFont(new java.awt.Font("Times New Roman", 1, 16));
        heading2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading2.setText("Bell Management");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(heading1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
            .addComponent(heading2, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(heading1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(heading2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        masterClock.setFont(new java.awt.Font("Times New Roman", 1, 20));
        masterClock.setForeground(new java.awt.Color(255, 51, 51));
        masterClock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        masterClock.setText("Master Clock");

        saveSettings.setText("Save Time Settings..");
        saveSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSettingsActionPerformed(evt);
            }
        });

        display.setLayout(new javax.swing.BoxLayout(display, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Designed By Rahul Sinha-(XI-A) & Indrojyoti Rano (XI-A)");

        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Copyright De Nobili C.M.R.I Â© All Rights Reserved");

        javax.swing.GroupLayout MclockPanelLayout = new javax.swing.GroupLayout(MclockPanel);
        MclockPanel.setLayout(MclockPanelLayout);
        MclockPanelLayout.setHorizontalGroup(
            MclockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(masterClock, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MclockPanelLayout.createSequentialGroup()
                .addContainerGap(496, Short.MAX_VALUE)
                .addComponent(saveSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(MclockPanelLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(MclockPanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
            .addComponent(display, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
            .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
        );
        MclockPanelLayout.setVerticalGroup(
            MclockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MclockPanelLayout.createSequentialGroup()
                .addComponent(masterClock, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveSettings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2))
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Change Settings");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSettings(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ring");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Ring the BELL");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RingMyBell(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Close the BELL");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseMyBell(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MclockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MclockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void saveSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSettingsActionPerformed
    try{
        DataOutputStream file=new DataOutputStream(new FileOutputStream(txtfile));
        file.flush();
        file.writeBytes(nTime+"\n"+String.valueOf(delay)+"\n");
        for(int i=0;i<nTime;i++){
            file.writeBytes(time[i]+",");
            if(ofc[i].equals("ON"))
                file.writeBytes("ON"+"\n");
            else
                file.writeBytes("OFF"+"\n");
        }
        JOptionPane.showMessageDialog(this, "Save Successful !!!!!!");
    }catch(Exception ex){JOptionPane.showMessageDialog(this, ex.getMessage());}
}//GEN-LAST:event_saveSettingsActionPerformed

private void changeSettings(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSettings
    
    if(JOptionPane.showConfirmDialog(this, "For Changing the settings the current Window will be closed.")==0){
        dispose();
        new TimeAdjust().setVisible(true);
    }
    
}//GEN-LAST:event_changeSettings

private void RingMyBell(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RingMyBell
    switchOn();
}//GEN-LAST:event_RingMyBell

private void CloseMyBell(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseMyBell
    switchOff();
}//GEN-LAST:event_CloseMyBell
public class dispPanel extends JPanel implements ActionListener{

    /** Creates new form timerPanel */
    
    public dispPanel() {
        setPreferredSize(new Dimension(700,190));
        setLayout(new GridLayout(4,5));
        
        try{
            file=new DataInputStream(new FileInputStream(txtfile));
            nTime=Integer.parseInt(file.readLine());
            delay=Integer.parseInt(file.readLine());
            time = new String[nTime];
            tTime = new int[nTime][3];
            ofc=new String[nTime];
            
            for(int i=0;i<nTime;i++){
                time[i]="00:00:00";
                tTime[i][0]=0;
                tTime[i][1]=0;
                tTime[i][2]=0;
                ofc[i]="OFF";
            }
            
            for(int i=0;i<nTime;i++){
                String str=file.readLine();
                if(str.equals("")){
                    str="00:00:00,OFF";
                }
                
                int dum=0;
                String s="";
                for(int j=0;j<str.length();j++){
                    char ch=str.charAt(j);
                    
                    if(ch==':'){
                        dum++;
                        s="";
                    }
                    else if(ch==','){
                        dum=10;
                        s="";
                    }
                    else
                        s=s+ch;
                    
                    if(s.length()>=1 && dum!=10){
                    if(dum<3)
                        tTime[i][dum]=Integer.parseInt(s);
                    }
                    else
                        ofc[i]=s;
                    
                }
                time[i]=String.valueOf(tTime[i][0])+":"+String.valueOf(tTime[i][1])+":"+String.valueOf(tTime[i][2]);
            }
            file.close();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        initiateLabels();
        updateclock();
        final boolean ch=true;
        
        thrd =new Thread(){
            public void run() {
                while(ch){
                try{
                    
                updateclock();
                
                for(int i=0;i<nTime;i++){
                    if(ofc[i].equals("ON")){
                        if(tTime[i][0]==hh && tTime[i][1]==mm && tTime[i][2]==ss){
                            switchOn();
                            thrd.sleep(delay*1000);
                            switchOff();
                            repaint();
                        }
                    }
                }
                repaint();
                try{
                    thrd.sleep(100);
                }catch(InterruptedException ex){}
                
                }catch(Exception ex){}
                }
            }
        };

        thrd.start();
    }

    void updateclock(){
        cln=Calendar.getInstance();
        hh=cln.get(Calendar.HOUR_OF_DAY);
        mm=cln.get(Calendar.MINUTE);
        ss=cln.get(Calendar.SECOND);
        curTime=cln.get(Calendar.HOUR)+":"+mm+":"+ss+" "+(cln.get(Calendar.AM_PM)==0?"AM":"PM");//+(cln.get(Calendar.AM_PM)==0?"AM":"PM")
        masterClock.setText(curTime);
    }
    void initiateLabels(){
        jLbl=new JButton[nTime];
        for(int i=0;i<nTime;i++){
            jLbl[i]=new JButton(time[i]);
            jLbl[i].setFont(new Font("Times New Roman", Font.PLAIN, 14));
            jLbl[i].setVisible(true);
            jLbl[i].setActionCommand(String.valueOf(i));
            jLbl[i].addActionListener(this);
            add(jLbl[i]);
        }
    }
    
    public void actionPerformed(ActionEvent e){
        for(int i=0;i<nTime;i++){
            if(e.getActionCommand().equals(String.valueOf(i))){
                cTime=i;
                break;
            }
        }
        JFrame j=new InsertTime();
        j.setVisible(true);
        
    }
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        
        for(int i=0;i<nTime;i++){
            jLbl[i].setLabel(time[i]);
            if(ofc[i].equals("OFF"))
            jLbl[i].setBackground(Color.LIGHT_GRAY);
            else if(ofc[i].equals("ON"))
                jLbl[i].setBackground(Color.CYAN);
        }
        
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MclockPanel;
    private javax.swing.JPanel display;
    private javax.swing.JLabel heading1;
    private javax.swing.JLabel heading2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    public javax.swing.JLabel masterClock;
    private javax.swing.JButton saveSettings;
    // End of variables declaration//GEN-END:variables
}
